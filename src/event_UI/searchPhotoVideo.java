/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event_UI;

import database.dbConnection2;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;


public class searchPhotoVideo extends javax.swing.JFrame {

    /**
     * Creates new form searchPhotoVideo
     */
    public searchPhotoVideo() {
        initComponents();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        srchText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        srchAddr = new javax.swing.JTextField();

        setTitle("Search");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Name", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dataTable);

        srchText.setBackground(new java.awt.Color(153, 204, 255));
        srchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                srchTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srchTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                srchTextKeyTyped(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("By Name :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("By Location :");

        srchAddr.setBackground(new java.awt.Color(153, 204, 255));
        srchAddr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                srchAddrKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srchAddrKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(srchText, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(srchAddr))
                .addGap(84, 84, 84))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(srchAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jButton1)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(516, 513));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        photographerDetails.fillTextFields(Integer.parseInt(String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 0))));
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void srchTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchTextKeyPressed
       fillTable();
    }//GEN-LAST:event_srchTextKeyPressed

    private void srchTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchTextKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_srchTextKeyTyped

    private void srchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchTextKeyReleased
        try {
                DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
                table.setRowCount(0);
                if (!(srchText.getText().equals(""))) {
                    Statement con = dbConnection2.db().createStatement();
                    ResultSet rs1 = con.executeQuery("SELECT * FROM photovideodetails WHERE pvName LIKE '%" + srchText.getText() + "%' ");
                    while (rs1.next()) {
                        Vector rc = new Vector();
                        rc.add(rs1.getString("pvID"));
                        rc.add(rs1.getString("pvName"));
                        rc.add(rs1.getString("pvAddress"));
                        table.addRow(rc);
                    }
                } else {
                    fillTable();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_srchTextKeyReleased

    private void srchAddrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchAddrKeyReleased
        try {
                DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
                table.setRowCount(0);
                if (!(srchAddr.getText().equals(""))) {
                    Statement con = dbConnection2.db().createStatement();
                    ResultSet rs1 = con.executeQuery("SELECT * FROM photovideodetails WHERE pvAddress LIKE '%" + srchAddr.getText() + "%' ");
                    while (rs1.next()) {
                        Vector rc = new Vector();
                        rc.add(rs1.getString("pvID"));
                        rc.add(rs1.getString("pvName"));
                        rc.add(rs1.getString("pvAddress"));
                        table.addRow(rc);
                    }
                } else {
                    fillTable();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_srchAddrKeyReleased

    private void srchAddrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchAddrKeyPressed
        fillTable();
    }//GEN-LAST:event_srchAddrKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchPhotoVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchPhotoVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchPhotoVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchPhotoVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchPhotoVideo().setVisible(true);
            }
        });
    }
    
    
    //user defined method
    private void fillTable(){
        DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
        table.setRowCount(0);
        
        //setting column width
        TableColumnModel columnModel = dataTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(50);
        
        
        //load data to table from database
        try {
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM photovideodetails" );
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("pvID"));
                rc.add(record.getString("pvName"));
                rc.add(record.getString("pvAddress"));
                table.addRow(rc);
            }
        } catch (ClassNotFoundException | SQLException ex) {
           Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dataTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField srchAddr;
    private javax.swing.JTextField srchText;
    // End of variables declaration//GEN-END:variables
}
