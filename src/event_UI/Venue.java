/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event_UI;

import database.dbConnection2;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Dhanuka Abeywardhane
 */
public class Venue extends javax.swing.JPanel {

    /**
     * Creates new form Venue
     */
    public static int venueID;
    boolean alreadyExecuted=false;
    private static boolean insertAddtional;
    private static boolean insertNew ;
    
    public Venue() {
        initComponents();
        fillVenueTable();
        newVenueID(); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        venue_saveUpdate = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        venue_txt_address = new javax.swing.JTextArea();
        venue_txt_city = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        venue_txt_tp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        venue_txt_name = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        venue_txt_email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        venueTable = new javax.swing.JTable();
        venue_srch = new javax.swing.JTextField();
        venue_btn_addNew = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        venue_txt_avgPrice = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        venue_txt_spclNote = new javax.swing.JTextArea();
        venue_btn_dlt = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Venue", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(700, 550));

        venue_saveUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/check.png"))); // NOI18N
        venue_saveUpdate.setToolTipText("Save");
        venue_saveUpdate.setBorderPainted(false);
        venue_saveUpdate.setContentAreaFilled(false);
        venue_saveUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        venue_saveUpdate.setFocusPainted(false);
        venue_saveUpdate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/check.png"))); // NOI18N
        venue_saveUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_saveUpdateActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel1.setOpaque(false);

        venue_txt_address.setColumns(10);
        venue_txt_address.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_txt_address.setRows(3);
        venue_txt_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_txt_addressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(venue_txt_address);

        venue_txt_city.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_txt_city.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_txt_cityKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText(" Venue Name :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("E-mail :");

        venue_txt_tp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_txt_tp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_txt_tpActionPerformed(evt);
            }
        });
        venue_txt_tp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_txt_tpKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("City :");

        venue_txt_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_txt_nameKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Address :");

        venue_txt_email.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_txt_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_txt_emailActionPerformed(evt);
            }
        });
        venue_txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_txt_emailKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Tel/Mobile Num :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(venue_txt_tp, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(venue_txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(venue_txt_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(venue_txt_city, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(venue_txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(venue_txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(venue_txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(venue_txt_tp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        jScrollPane3.setOpaque(false);

        venueTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Venue", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        venueTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        venueTable.setFocusable(false);
        venueTable.setOpaque(false);
        venueTable.setRequestFocusEnabled(false);
        venueTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        venueTable.setShowVerticalLines(false);
        venueTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                venueTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(venueTable);

        venue_srch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_srch.setToolTipText("");
        venue_srch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_srchActionPerformed(evt);
            }
        });
        venue_srch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                venue_srchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                venue_srchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_srchKeyTyped(evt);
            }
        });

        venue_btn_addNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        venue_btn_addNew.setToolTipText("Add New");
        venue_btn_addNew.setBorderPainted(false);
        venue_btn_addNew.setContentAreaFilled(false);
        venue_btn_addNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        venue_btn_addNew.setFocusPainted(false);
        venue_btn_addNew.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/add.png"))); // NOI18N
        venue_btn_addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_btn_addNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(venue_srch, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(venue_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(venue_srch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(venue_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Additional Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);

        venue_txt_avgPrice.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_txt_avgPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_txt_avgPriceActionPerformed(evt);
            }
        });
        venue_txt_avgPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_txt_avgPriceKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Average price :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Special Note :");

        venue_txt_spclNote.setColumns(10);
        venue_txt_spclNote.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        venue_txt_spclNote.setRows(5);
        venue_txt_spclNote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                venue_txt_spclNoteKeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(venue_txt_spclNote);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(venue_txt_avgPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(venue_txt_avgPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        venue_btn_dlt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/forbidden.png"))); // NOI18N
        venue_btn_dlt.setToolTipText("Remove");
        venue_btn_dlt.setBorderPainted(false);
        venue_btn_dlt.setContentAreaFilled(false);
        venue_btn_dlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        venue_btn_dlt.setFocusPainted(false);
        venue_btn_dlt.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/forbidden.png"))); // NOI18N
        venue_btn_dlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_btn_dltActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(venue_saveUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(venue_btn_dlt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(venue_btn_dlt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(venue_saveUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void venue_txt_avgPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_txt_avgPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_venue_txt_avgPriceActionPerformed

    private void venue_txt_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_txt_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_venue_txt_emailActionPerformed

    private void venue_srchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_srchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_venue_srchActionPerformed

    private void venue_btn_addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_btn_addNewActionPerformed
            clear();
            newVenueID();        
    }//GEN-LAST:event_venue_btn_addNewActionPerformed
    private void newVenueID(){
             try{
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record1  = con.executeQuery("SELECT MAX(venueID)+1 FROM venuedetails");    //get next venue ID
                while(record1.next()){                                                                    // if there is not already inserted venue
                    if(record1.getString(1) == null)                                                      // venue id set to 1  
                        venueID = 1;
                    else
                        venueID = Integer.parseInt(record1.getString("MAX(venueID)+1"));                   // else set venue id to next number
                }
            }catch(ClassNotFoundException | SQLException | NumberFormatException e){
                System.out.println(e);
            }  
            insertNew = true;
            insertAddtional = true;
    }
    private void venue_saveUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_saveUpdateActionPerformed
        //if complex contact me(Dhanuka - 0771943040 | dansanrox@gmail.com)
        //from one button, values are inserted and updated into two tables
        //ASSUMPTION - An event can only have one venue       
        if(!nullValidate()){
            JOptionPane.showMessageDialog(null,"Field Cannot be Empty...!","Error",1);
        }else if(!isValidMoblieNo(venue_txt_tp)){
            JOptionPane.showMessageDialog(null,"Moblie Number is Invalid...!","Error",1);
            venue_txt_tp.grabFocus();
        }else{
        
                try{
                    Statement con = dbConnection2.db().createStatement();  

                    // check wether table row is selected. if not Insert new values to table with new venueID
                    if(insertNew){     
                            
                            con.executeUpdate("INSERT INTO venuedetails "
                                             +"VALUES('"+venueID+"' , '"+venue_txt_name.getText()+"' , '"+venue_txt_address.getText()+"' , '"+venue_txt_city.getText()+"' , '"+venue_txt_email.getText()+"' , '"+venue_txt_tp.getText()+"')");
                         
                            //insert additional details
                            if(insertAddtional){
                                con.executeUpdate("INSERT INTO eventvenue VALUES('"+eventDetails.eventID+"', '"+venueID+"' , '"+venue_txt_avgPrice.getText()+"' ,'"+venue_txt_spclNote.getText()+"')");
                                insertAddtional = false;

                            //update additional details    
                            }else{                                                 
                                con.executeUpdate("UPDATE eventvenue SET venueID= '"+venueID+"' , avgPrice= '"+venue_txt_avgPrice.getText()+"', spclNote='"+venue_txt_spclNote.getText()+"' WHERE eventID='"+eventDetails.eventID+"' ");
                            }
                            
                             if(!alreadyExecuted){
                                event_mainWindow.updateProgressBar(15);
                                alreadyExecuted=true;
                               }
                            
                        insertNew = false;     
                        fillVenueTable();

                    // else update the values according to current selected row.
                    }else{                                                                                                                  
                        con.executeUpdate("UPDATE venuedetails "
                                          +"SET venueName = '"+venue_txt_name.getText()+"' , venueAddress = '"+venue_txt_address.getText()+"' , venueCity = '"+venue_txt_city.getText()+"' , venueEmail = '"+venue_txt_email.getText()+"' , venueTP = '"+venue_txt_tp.getText()+"' WHERE venueID = '"+venueID+"'");

                        //insert additional details
                        if(insertAddtional){
                            con.executeUpdate("INSERT INTO eventvenue VALUES('"+eventDetails.eventID+"', '"+venueTable.getValueAt(venueTable.getSelectedRow(),0)+"' , '"+venue_txt_avgPrice.getText()+"' ,'"+venue_txt_spclNote.getText()+"')");
                            insertAddtional = false;
                        //update additional details    
                        }else{
                            con.executeUpdate("UPDATE eventvenue SET venueID = '"+venueID+"' , avgPrice= '"+venue_txt_avgPrice.getText()+"', spclNote='"+venue_txt_spclNote.getText()+"' WHERE eventID='"+eventDetails.eventID+"' ");
                        }
                        
                            if(!alreadyExecuted){
                                event_mainWindow.updateProgressBar(15);
                                alreadyExecuted=true;
                               }
                        
                        fillVenueTable();
                    }

                }catch(ClassNotFoundException | SQLException | HeadlessException e){
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"Check Again...!","Error",1);
                }
        }
    }//GEN-LAST:event_venue_saveUpdateActionPerformed

    private void venue_txt_tpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_txt_tpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_venue_txt_tpActionPerformed

    private void venueTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venueTableMouseClicked
        venueID = Integer.parseInt(String.valueOf(venueTable.getValueAt(venueTable.getSelectedRow(), 0)));
        fillTextFileds(venueID);
        insertNew = false;
    }//GEN-LAST:event_venueTableMouseClicked

    private void venue_srchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_srchKeyPressed
        fillVenueTable();
    }//GEN-LAST:event_venue_srchKeyPressed

    private void venue_srchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_srchKeyReleased
        try {
                DefaultTableModel table = (DefaultTableModel) venueTable.getModel();
                table.setRowCount(0);
                if (!(venue_srch.getText().equals(""))) {
                    Statement con = dbConnection2.db().createStatement();
                    ResultSet rs1 = con.executeQuery("SELECT * FROM venuedetails WHERE venueName LIKE '%" + venue_srch.getText() + "%'OR venueCity LIKE '%" + venue_srch.getText() +"%'");
                    while (rs1.next()) {
                        Vector v1 = new Vector();
                        v1.add(rs1.getString("venueID"));
                        v1.add(rs1.getString("venueName"));
                        v1.add(rs1.getString("venueCity"));
                        table.addRow(v1);
                    }
                } else {
                    fillVenueTable();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_venue_srchKeyReleased

    private void venue_btn_dltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_btn_dltActionPerformed
        
        if(nullValidate()){
            if(JOptionPane.showConfirmDialog(null,"Are You sure want to Remove this...?","Remove",JOptionPane.YES_NO_OPTION)==0){
                try {
                    Statement con = dbConnection2.db().createStatement();
                    con.executeUpdate("DELETE FROM eventvenue WHERE eventID='"+eventDetails.eventID+"'");
                    clear();
                    newVenueID();
                    event_mainWindow.updateProgressBar(-15);
                    alreadyExecuted=false;
                } catch (ClassNotFoundException | SQLException | HeadlessException e) {
                    System.out.println(e);
                }
             }
            
        }else{
            JOptionPane.showMessageDialog(null,"Field Cannot be Empty...!","Error",1);
        }
        
    }//GEN-LAST:event_venue_btn_dltActionPerformed

    private void venue_srchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_srchKeyTyped
        // TODO add your handling code here:
          if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_srchKeyTyped

    private void venue_txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_txt_nameKeyTyped
        // TODO add your handling code here:
          if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_txt_nameKeyTyped

    private void venue_txt_addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_txt_addressKeyTyped
        // TODO add your handling code here:
          if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_txt_addressKeyTyped

    private void venue_txt_cityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_txt_cityKeyTyped
        // TODO add your handling code here:
          if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_txt_cityKeyTyped

    private void venue_txt_emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_txt_emailKeyTyped
        // TODO add your handling code here:
          if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_txt_emailKeyTyped

    private void venue_txt_tpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_txt_tpKeyTyped
        // TODO add your handling code here:
          if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39 || Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_txt_tpKeyTyped

    private void venue_txt_avgPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_txt_avgPriceKeyTyped
        // TODO add your handling code here:
           if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39 || Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_txt_avgPriceKeyTyped

    private void venue_txt_spclNoteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_venue_txt_spclNoteKeyTyped
        // TODO add your handling code here:
           if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_venue_txt_spclNoteKeyTyped
    
    //user defined metods
    
    private void fillTextFileds(int t_venueID){
       try{
         Statement con = dbConnection2.db().createStatement();
         ResultSet record =  con.executeQuery("SELECT * FROM venuedetails WHERE venueID='"+t_venueID+"'" );
            while(record.next()){
            venue_txt_name.setText(record.getString("venueName"));
            venue_txt_address.setText(record.getString("venueAddress"));
            venue_txt_city.setText(record.getString("venueCity"));
            venue_txt_email.setText(record.getString("venueEmail"));
            venue_txt_tp.setText(record.getString("venueTP"));
            }
         }catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
//    public boolean isValidEmail(JTextField t){
//        try{
//                 
//            return true;
//        }catch(Exception e){
//            return false;
//        }
//    }
            
    private boolean isTextFiledNull(JTextField t){
        return t.getText().equals("") || t.getText() == null;
    }
    
    private boolean nullValidate(){
        if(isTextFiledNull(venue_txt_name))
            return false;
        else if(venue_txt_address.getText().equals("") || venue_txt_address.getText()==null)
            return false;
        else if(isTextFiledNull(venue_txt_city))
            return false;
        else if(isTextFiledNull(venue_txt_tp))
            return false;
        else return !isTextFiledNull(venue_txt_avgPrice);
    }
    
    
    private boolean isValidMoblieNo(JTextField t){
        return t.getText().length()==10;
    }
    
    private void fillVenueTable(){
        
        DefaultTableModel table = (DefaultTableModel) venueTable.getModel();
        table.setRowCount(0);
        
        
//        venueTable.setOpaque(false);
//        venueTable.setFocusable(false);
//        DefaultTableCellRenderer dtcm = (DefaultTableCellRenderer)venueTable.getDefaultRenderer(Object.class);
//        dtcm.setOpaque(false);
//        
//        
//
//        jScrollPane3.setOpaque(false);
//        jScrollPane3.getViewport().setOpaque(false);
          
        
        //setting column width
        TableColumnModel columnModel = venueTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(150);
        
        //load data to table from database
        try {
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM venuedetails" );
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("venueID"));
                rc.add(record.getString("venueName"));
                rc.add(record.getString("venueCity"));
                table.addRow(rc);
            }
        } catch (ClassNotFoundException | SQLException ex) {
           Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }
    
    private void clear(){
        venue_srch.setText("");
        venue_txt_name.setText("");
        venue_txt_address.setText("");
        venue_txt_city.setText("");
        venue_txt_email.setText("");
        venue_txt_tp.setText("");
        venue_txt_spclNote.setText("");
        venue_txt_avgPrice.setText("");
        
        venueTable.clearSelection();
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable venueTable;
    private javax.swing.JButton venue_btn_addNew;
    private javax.swing.JButton venue_btn_dlt;
    private javax.swing.JButton venue_saveUpdate;
    private javax.swing.JTextField venue_srch;
    private javax.swing.JTextArea venue_txt_address;
    private javax.swing.JTextField venue_txt_avgPrice;
    private javax.swing.JTextField venue_txt_city;
    private javax.swing.JTextField venue_txt_email;
    private javax.swing.JTextField venue_txt_name;
    private javax.swing.JTextArea venue_txt_spclNote;
    private javax.swing.JTextField venue_txt_tp;
    // End of variables declaration//GEN-END:variables
}
