/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event_UI;

import database.dbConnection2;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;




/**
 *
 * @author Dhanuka Abeywardhane
 */
public class eventDetails extends javax.swing.JPanel {
    /**
     * Creates new form eventDetails
     */
    public static int eventID= 0;
    boolean alreadyExecuted=false;
    
    public eventDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        event_txt_name = new javax.swing.JTextField();
        event_combo_evtType = new javax.swing.JComboBox();
        evt_txt_strtDate = new com.toedter.calendar.JDateChooser();
        evt_txt_endDate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        evt_txt_avgNumprsn = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        evt_txt_spclNte = new javax.swing.JTextArea();
        evt_btn_save = new javax.swing.JButton();
        evt_txt_strtTime = new javax.swing.JSpinner(new SpinnerDateModel());
        evt_txt_endTime = new javax.swing.JSpinner(new SpinnerDateModel());
        JSpinner.DateEditor timeEditor2 = new JSpinner.DateEditor(evt_txt_endTime,"HH:mm");
        evt_txt_endTime.setEditor(timeEditor2);
        evt_txt_endTime.setValue(new Date()); //current date;

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Event Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        setForeground(new java.awt.Color(0, 255, 0));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(700, 500));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Event Name :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Event Type :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Start Date :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("End Date : ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Start Time : ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("End Time :");

        event_txt_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        event_txt_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                event_txt_nameMouseEntered(evt);
            }
        });
        event_txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                event_txt_nameActionPerformed(evt);
            }
        });
        event_txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                event_txt_nameKeyTyped(evt);
            }
        });

        event_combo_evtType.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        event_combo_evtType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose One", "Meeting", "Seminar", "Birthday", "Dinner Party", "Sport Event", "Concert", "Other" }));
        event_combo_evtType.setOpaque(false);

        evt_txt_strtDate.setDateFormatString("dd-MM-yyyy");
        evt_txt_strtDate.setOpaque(false);

        evt_txt_endDate.setDateFormatString("dd-MM-yyyy");
        evt_txt_endDate.setOpaque(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Average Number Of Person :");

        evt_txt_avgNumprsn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        evt_txt_avgNumprsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evt_txt_avgNumprsnActionPerformed(evt);
            }
        });
        evt_txt_avgNumprsn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                evt_txt_avgNumprsnKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                evt_txt_avgNumprsnKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                evt_txt_avgNumprsnKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Special Note :");

        evt_txt_spclNte.setColumns(20);
        evt_txt_spclNte.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        evt_txt_spclNte.setRows(5);
        evt_txt_spclNte.setTabSize(0);
        evt_txt_spclNte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                evt_txt_spclNteKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(evt_txt_spclNte);

        evt_btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/check.png"))); // NOI18N
        evt_btn_save.setBorderPainted(false);
        evt_btn_save.setContentAreaFilled(false);
        evt_btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        evt_btn_save.setFocusPainted(false);
        evt_btn_save.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/check.png"))); // NOI18N
        evt_btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evt_btn_saveActionPerformed(evt);
            }
        });

        JSpinner.DateEditor timeEditor = new JSpinner.DateEditor(evt_txt_strtTime,"HH:mm");
        evt_txt_strtTime.setEditor(timeEditor);
        evt_txt_strtTime.setValue(new Date()); //current date

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(event_txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(evt_txt_avgNumprsn))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(evt_txt_endTime, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(event_combo_evtType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(evt_txt_endDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(evt_txt_strtDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(evt_txt_strtTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(evt_btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(event_txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(evt_txt_avgNumprsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(event_combo_evtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(evt_txt_strtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(evt_txt_endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(evt_txt_strtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(evt_txt_endTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(evt_btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(186, 186, 186))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void event_txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_event_txt_nameActionPerformed

    private void evt_txt_avgNumprsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evt_txt_avgNumprsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evt_txt_avgNumprsnActionPerformed

    private void evt_btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evt_btn_saveActionPerformed
       
       
        
       if(nullValidate()){
        try {
           
            //converting jDatechooser to sql type date
            //convert util time to sql time
            java.util.Date startDate = evt_txt_strtDate.getDate();
            java.util.Date endDate = evt_txt_endDate.getDate();
            
//            java.util.Date StartTime = (Date)evt_txt_strtTime.getValue();
//            java.util.Date EndTime = (Date)evt_txt_endTime.getValue();
            
            java.sql.Date sqlStartdate = new java.sql.Date(startDate.getTime());
            java.sql.Date sqlEndtdate = new java.sql.Date(startDate.getTime());
            
//            java.sql.Date sqlStartTime = new java.sql.Date(StartTime.getTime());
//            java.sql.Date sqlEndTime = new java.sql.Date(EndTime.getTime());
            
            if (startDate == null && endDate==null) {
                    JOptionPane.showMessageDialog(null, "Please Choose a Date..!","Error",1);
            }else if(sqlStartdate.after(endDate) && !sqlStartdate.equals(endDate)){
                    JOptionPane.showMessageDialog(null, "End Date Cannot less than Start Date...!","Error",1);
                    evt_txt_endDate.grabFocus();
            }else if(Double.parseDouble(evt_txt_avgNumprsn.getText()) > 1000000){
                    JOptionPane.showMessageDialog(null,"Please choose valid Average number...!", "Error",1);
                    evt_txt_avgNumprsn.grabFocus();
            }else {
            
                
            
                Statement con = dbConnection2.db().createStatement();
                
                // if event details inserted already, but user click SAVE button again avoid insert again into table
                
                if(eventID==0){                     //insert eventdetails first
                    
                    con.executeUpdate("INSERT INTO eventdetails (eventName,eventType,eventStartDate,eventEndDate,eventStartTime,eventEndTime,eventAvgNumPrsn,eventSpclNte)"
                                      +"VALUES('"+event_txt_name.getText()+"' , '"+event_combo_evtType.getSelectedItem()+"' , '"+sqlStartdate+"' , '"+sqlEndtdate+"'"
                                      + " , '"+evt_txt_strtTime.getValue()+"' , '"+evt_txt_endTime.getValue().toString()+"' , '"+evt_txt_avgNumprsn.getText()+"' , '"+evt_txt_spclNte.getText()+"' )"); 

                           
                    java.sql.ResultSet record1  = con.executeQuery("SELECT MAX(eventID) FROM eventdetails");
                    
                    while(record1.next()){
                        eventID = Integer.parseInt(record1.getString("MAX(eventID)"));
                    }
                    
                    if(!alreadyExecuted){
                        event_mainWindow.updateProgressBar(15);
                        alreadyExecuted=true;
                    }
                    
                }else{                              //update already inseted values
                    
                    con.executeUpdate("UPDATE eventdetails "
                                      +"SET eventName='"+event_txt_name.getText()+"' , eventType='"+event_combo_evtType.getSelectedItem()+"' , eventStartDate='"+sqlStartdate+"' , eventEndDate='"+sqlEndtdate+"' , "
                                      +"eventStartTime = '"+String.valueOf(evt_txt_strtTime.getValue())+"' , eventEndTime='"+String.valueOf(evt_txt_endTime.getValue())+"' , eventAvgNumPrsn='"+evt_txt_avgNumprsn.getText()+"', eventSpclNte='"+evt_txt_spclNte.getText()+"' "
                                      +"WHERE eventID='"+eventID+"' ");
                    
                      if(!alreadyExecuted){
                        event_mainWindow.updateProgressBar(15);
                        alreadyExecuted=true;
                    }
                }
                
            }
            
        }catch(HeadlessException | ClassNotFoundException | SQLException | NumberFormatException ex){
                System.out.print(ex);
                JOptionPane.showMessageDialog(null,"Check Again...!","Error",1);
        }
        
       }else{
           JOptionPane.showMessageDialog(null,"Field Cannot be Empty...!","Error",1);
       }
        
    }//GEN-LAST:event_evt_btn_saveActionPerformed

    private void evt_txt_avgNumprsnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_evt_txt_avgNumprsnKeyTyped
        //prevent typing " , ' and characters
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39 || Character.isDigit(evt.getKeyChar())== false) {
            evt.consume();
        }
    }//GEN-LAST:event_evt_txt_avgNumprsnKeyTyped

    private void evt_txt_avgNumprsnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_evt_txt_avgNumprsnKeyReleased
//        if(Integer.parseInt(evt_txt_avgNumprsn.getText()) > 100000)
//            setTextForegroundRed(evt_txt_avgNumprsn);
//        else
//            evt_txt_avgNumprsn.setForeground(Color.BLACK);     
    }//GEN-LAST:event_evt_txt_avgNumprsnKeyReleased

    private void evt_txt_avgNumprsnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_evt_txt_avgNumprsnKeyPressed
           
    }//GEN-LAST:event_evt_txt_avgNumprsnKeyPressed

    private void event_txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_event_txt_nameKeyTyped
          if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_event_txt_nameKeyTyped

    private void evt_txt_spclNteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_evt_txt_spclNteKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_evt_txt_spclNteKeyTyped

    private void event_txt_nameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_event_txt_nameMouseEntered
        // TODO add your handling code here:
        System.out.println(eventID);
    }//GEN-LAST:event_event_txt_nameMouseEntered

    //user defined methods
    private void setTextForegroundRed(JTextField t){
        t.setForeground(Color.red);
    }
   
            
    private boolean isTextFiledNull(JTextField t){
        return t.getText().equals("") || t.getText() == null;
    }
    
    private boolean isSpinnerNull(JSpinner s){
        return s.getValue().equals("") || s.getValue() == null;
    }
    
    private boolean nullValidate(){
        if(isTextFiledNull(event_txt_name))
            return false;
        else if(isSpinnerNull(evt_txt_strtTime))
            return false;
        else if(isSpinnerNull(evt_txt_endTime))
            return false;
        else if(isTextFiledNull(evt_txt_avgNumprsn))
            return false;
        else return event_combo_evtType.getSelectedItem() != "Choose One";           
    } 
    
    public static void editEvent(int evtID){
        eventID=evtID;
    }
 
       
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox event_combo_evtType;
    private javax.swing.JTextField event_txt_name;
    private javax.swing.JButton evt_btn_save;
    private javax.swing.JTextField evt_txt_avgNumprsn;
    private com.toedter.calendar.JDateChooser evt_txt_endDate;
    private javax.swing.JSpinner evt_txt_endTime;
    private javax.swing.JTextArea evt_txt_spclNte;
    private com.toedter.calendar.JDateChooser evt_txt_strtDate;
    private javax.swing.JSpinner evt_txt_strtTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
