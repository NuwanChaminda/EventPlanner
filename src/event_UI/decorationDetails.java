/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event_UI;

import database.dbConnection2;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Devi
 */
public class decorationDetails extends javax.swing.JPanel {

    /**
     * Creates new form decorationDetails
     */
    
    public static int decoID;
    boolean alreadyExecuted=false;
    private static boolean insertAddtional;
    private static boolean insertNew ;
    
    public decorationDetails() {
        initComponents();
        fillDecoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deco_btn_save = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        deco_table = new javax.swing.JTable();
        deco_btn_addNew = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        deco_txt_name = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        deco_txt_address = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        deco_txt_email = new javax.swing.JTextField();
        deco_txt_TP = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        deco_txt_spclNote = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        deco_txt_cost = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        deco_chk_lights = new javax.swing.JCheckBox();
        deco_chk_ballonns = new javax.swing.JCheckBox();
        deco_chk_ornemant = new javax.swing.JCheckBox();
        deco_chk_candles = new javax.swing.JCheckBox();
        deco_chk_flowers = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        deco_chk_props = new javax.swing.JCheckBox();
        deco_txt_theme = new javax.swing.JTextField();
        deco_btn_dlt = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Decoration & Florist", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 24))); // NOI18N
        setOpaque(false);

        deco_btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/check.png"))); // NOI18N
        deco_btn_save.setBorderPainted(false);
        deco_btn_save.setContentAreaFilled(false);
        deco_btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deco_btn_save.setFocusPainted(false);
        deco_btn_save.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/check.png"))); // NOI18N
        deco_btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_btn_saveActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel1.setOpaque(false);

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        deco_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        deco_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deco_table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        deco_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deco_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(deco_table);

        deco_btn_addNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        deco_btn_addNew.setBorderPainted(false);
        deco_btn_addNew.setContentAreaFilled(false);
        deco_btn_addNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deco_btn_addNew.setFocusPainted(false);
        deco_btn_addNew.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/add.png"))); // NOI18N
        deco_btn_addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_btn_addNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(deco_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deco_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Name :");

        deco_txt_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deco_txt_nameKeyTyped(evt);
            }
        });

        deco_txt_address.setColumns(10);
        deco_txt_address.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_txt_address.setRows(3);
        deco_txt_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deco_txt_addressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(deco_txt_address);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Address :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("E-mail  :");

        deco_txt_email.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_txt_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_txt_emailActionPerformed(evt);
            }
        });
        deco_txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deco_txt_emailKeyTyped(evt);
            }
        });

        deco_txt_TP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_txt_TP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_txt_TPActionPerformed(evt);
            }
        });
        deco_txt_TP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deco_txt_TPKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Tel/Mobile Num :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(deco_txt_name)
                    .addComponent(deco_txt_email)
                    .addComponent(deco_txt_TP))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(deco_txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deco_txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deco_txt_TP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel8)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel9)))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Additional Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);

        deco_txt_spclNote.setColumns(10);
        deco_txt_spclNote.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_txt_spclNote.setRows(5);
        deco_txt_spclNote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deco_txt_spclNoteKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(deco_txt_spclNote);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Theme :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Special Note :");

        deco_txt_cost.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_txt_cost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_txt_costActionPerformed(evt);
            }
        });
        deco_txt_cost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deco_txt_costKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Average Cost :");

        deco_chk_lights.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_chk_lights.setText("Lights");
        deco_chk_lights.setOpaque(false);
        deco_chk_lights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_chk_lightsActionPerformed(evt);
            }
        });

        deco_chk_ballonns.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_chk_ballonns.setText("Balloons");
        deco_chk_ballonns.setOpaque(false);
        deco_chk_ballonns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_chk_ballonnsActionPerformed(evt);
            }
        });

        deco_chk_ornemant.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_chk_ornemant.setText("Ornemant");
        deco_chk_ornemant.setOpaque(false);
        deco_chk_ornemant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_chk_ornemantActionPerformed(evt);
            }
        });

        deco_chk_candles.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_chk_candles.setText("Candles");
        deco_chk_candles.setOpaque(false);
        deco_chk_candles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_chk_candlesActionPerformed(evt);
            }
        });

        deco_chk_flowers.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_chk_flowers.setText("Flowers");
        deco_chk_flowers.setOpaque(false);
        deco_chk_flowers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_chk_flowersActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Decorations :");

        deco_chk_props.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_chk_props.setText("Props");
        deco_chk_props.setOpaque(false);
        deco_chk_props.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_chk_propsActionPerformed(evt);
            }
        });

        deco_txt_theme.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deco_txt_theme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_txt_themeActionPerformed(evt);
            }
        });
        deco_txt_theme.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deco_txt_themeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deco_txt_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deco_chk_ballonns)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deco_chk_flowers)
                            .addComponent(deco_chk_lights))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deco_chk_props)
                            .addComponent(deco_chk_ornemant)
                            .addComponent(deco_chk_candles)))
                    .addComponent(deco_txt_theme, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deco_chk_flowers)
                            .addComponent(deco_chk_candles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deco_chk_ballonns)
                            .addComponent(deco_chk_ornemant))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deco_chk_lights))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(deco_chk_props)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deco_txt_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel13))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deco_txt_theme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        deco_btn_dlt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/forbidden.png"))); // NOI18N
        deco_btn_dlt.setToolTipText("");
        deco_btn_dlt.setBorderPainted(false);
        deco_btn_dlt.setContentAreaFilled(false);
        deco_btn_dlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deco_btn_dlt.setFocusPainted(false);
        deco_btn_dlt.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/forbidden.png"))); // NOI18N
        deco_btn_dlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deco_btn_dltActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deco_btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deco_btn_dlt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deco_btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deco_btn_dlt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void deco_btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_btn_saveActionPerformed

        int flowers = deco_chk_flowers.isSelected() ? 1:0;
        int candles = deco_chk_candles.isSelected() ? 1:0;
        int lights = deco_chk_lights.isSelected() ? 1:0;
        int balloons = deco_chk_ballonns.isSelected() ? 1:0;
        int orenements = deco_chk_ornemant.isSelected() ? 1:0;
        int props = deco_chk_props.isSelected() ? 1:0;
        
        int rowSelected = deco_table.getSelectedRow();
        
         if(!nullValidate()){
            JOptionPane.showMessageDialog(null,"Field Cannot be Empty...!","Error",1);
        }else if(!isValidMoblieNo(deco_txt_TP)){
            JOptionPane.showMessageDialog(null,"Moblie Number is Invalid...!","Error",1);
            deco_txt_TP.grabFocus();
        }else{
         try{
            Statement con = dbConnection2.db().createStatement();  
                if(insertNew){
                    
                    con.executeUpdate("INSERT INTO decodetails "
                                      +"VALUES('"+decoID+"' , '"+deco_txt_name.getText()+"' , '"+deco_txt_address.getText()+"' , '"+deco_txt_email.getText()+"' , '"+deco_txt_TP.getText()+"') ");
                    
                     //insert additional details
                    if(insertAddtional){
                        con.executeUpdate("INSERT INTO eventdeco VALUES('"+eventDetails.eventID+"', '"+decoID+"' , '"+flowers+"' ,"
                                         +"'"+candles+"' , '"+balloons+"' , '"+orenements+"' , '"+lights+"' , '"+props+"', '"+deco_txt_theme.getText()+"' ,  '"+deco_txt_cost.getText()+"' , '"+deco_txt_spclNote.getText()+"') ");
                        
                        
                        insertAddtional = false;

                    //update additional details    
                    }else{                                                 
                        con.executeUpdate("UPDATE eventdeco SET decoID= '"+decoID+"' , flowers= '"+flowers+"' , candles='"+candles+"' , balloons='"+balloons+"' , "
                                         +"ornemants='"+orenements+"' , lights='"+lights+"' , props='"+props+"', theme='"+deco_txt_theme.getText()+"', avgCost='"+deco_txt_cost.getText()+"' , spclNote='"+deco_txt_spclNote.getText()+"' WHERE eventID='"+eventDetails.eventID+"' ");
                    }

                    
                      if(!alreadyExecuted){
                                event_mainWindow.updateProgressBar(15);
                                alreadyExecuted=true;
                        }
                      
                        fillDecoTable();
                    insertNew = false;   
                    
                }else{
                    
                    con.executeUpdate("UPDATE decodetails "
                                     +"SET decoName='"+deco_txt_name.getText()+"' , decoAddress='"+deco_txt_address.getText()+"' , decoEmail='"+deco_txt_email.getText()+"' , decoTP='"+deco_txt_TP.getText()+"' "
                                     +"WHERE decoID='"+decoID+"' ");
                    
                     if(insertAddtional){
                       con.executeUpdate("INSERT INTO eventdeco VALUES('"+eventDetails.eventID+"', '"+decoID+"' , '"+flowers+"' ,"
                                         +"'"+candles+"' , '"+balloons+"' , '"+orenements+"' , '"+lights+"' , '"+props+"', '"+deco_txt_theme.getText()+"' ,  '"+deco_txt_cost.getText()+"' , '"+deco_txt_spclNote.getText()+"') ");
                        
                        insertAddtional = false;

                    //update additional details    
                    }else{                                                 
                         con.executeUpdate("UPDATE eventdeco SET decoID= '"+decoID+"' , flowers= '"+flowers+"' , candles='"+candles+"' , balloons='"+balloons+"' , "
                                         +"ornemants='"+orenements+"' , lights='"+lights+"' , props='"+props+"', theme='"+deco_txt_theme.getText()+"', avgCost='"+deco_txt_cost.getText()+"' , spclNote='"+deco_txt_spclNote.getText()+"' WHERE eventID='"+eventDetails.eventID+"' ");
                     }
                     

                     if(!alreadyExecuted){
                                event_mainWindow.updateProgressBar(15);
                                alreadyExecuted=true;
                        }
                     
                    fillDecoTable();
                    
                }
            }catch(ClassNotFoundException | SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,"Check Again...!","Error",1);
                System.out.println(e);
            }    
        }
    }//GEN-LAST:event_deco_btn_saveActionPerformed

    private void deco_txt_TPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_txt_TPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_txt_TPActionPerformed

    private void deco_chk_candlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_chk_candlesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_chk_candlesActionPerformed

    private void deco_chk_flowersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_chk_flowersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_chk_flowersActionPerformed

    private void deco_chk_ballonnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_chk_ballonnsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_chk_ballonnsActionPerformed

    private void deco_chk_ornemantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_chk_ornemantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_chk_ornemantActionPerformed

    private void deco_txt_costActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_txt_costActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_txt_costActionPerformed

    private void deco_btn_addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_btn_addNewActionPerformed
        clear();         
        newDecoID();
    }//GEN-LAST:event_deco_btn_addNewActionPerformed
    private void newDecoID(){
         try{
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record1  = con.executeQuery("SELECT MAX(decoID)+1 FROM decodetails");    //get next venue ID
                while(record1.next()){                                                                    // if there is not already inserted venue
                    if(record1.getString(1) == null)                                                      // venue id set to 1  
                        decoID = 1;
                    else
                        decoID = Integer.parseInt(record1.getString("MAX(decoID)+1"));                   // else set venue id to next number
                }
            }catch(ClassNotFoundException | SQLException | NumberFormatException e){
                System.out.println(e);
            }
         insertNew=true;
         insertAddtional=true;
    }
    
    private void deco_chk_lightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_chk_lightsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_chk_lightsActionPerformed

    private void deco_btn_dltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_btn_dltActionPerformed
    
    if(nullValidate()){    
        if(JOptionPane.showConfirmDialog(null,"Are You sure want to Remove this...?","Remove",JOptionPane.YES_NO_OPTION)==0){
            try {
                Statement con = dbConnection2.db().createStatement();
                con.executeUpdate("DELETE FROM eventdeco WHERE eventID='"+eventDetails.eventID+"'");
                JOptionPane.showMessageDialog(null, "Successfully Removed...!");
                clear();
                newDecoID();
                event_mainWindow.updateProgressBar(-15);
                alreadyExecuted=false;
            } catch (ClassNotFoundException | SQLException | HeadlessException e) {
                System.out.println(e);
            }
         }
    }else{
        JOptionPane.showMessageDialog(null,"Field Cannot be Empty...!","Error",1);
    }
    }//GEN-LAST:event_deco_btn_dltActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void deco_txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deco_txt_nameKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_deco_txt_nameKeyTyped

    private void deco_txt_addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deco_txt_addressKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_deco_txt_addressKeyTyped

    private void deco_txt_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_txt_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_txt_emailActionPerformed

    private void deco_txt_emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deco_txt_emailKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_deco_txt_emailKeyTyped

    private void deco_txt_TPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deco_txt_TPKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39 || Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_deco_txt_TPKeyTyped

    private void deco_txt_costKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deco_txt_costKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39 || Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_deco_txt_costKeyTyped

    private void deco_txt_spclNoteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deco_txt_spclNoteKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_deco_txt_spclNoteKeyTyped

    private void deco_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deco_tableMouseClicked
        decoID = Integer.parseInt(String.valueOf(deco_table.getValueAt(deco_table.getSelectedRow(), 0)));
        fillTextFields(decoID);
        insertNew=false;
    }//GEN-LAST:event_deco_tableMouseClicked

    private void deco_chk_propsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_chk_propsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_chk_propsActionPerformed

    private void deco_txt_themeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deco_txt_themeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_txt_themeActionPerformed

    private void deco_txt_themeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deco_txt_themeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_deco_txt_themeKeyTyped

    private void fillTextFields(int t_decoID){
        try{
            Statement con = dbConnection2.db().createStatement();
            ResultSet record =  con.executeQuery("SELECT * FROM decodetails WHERE decoID='"+t_decoID+"'" );
               while(record.next()){
               deco_txt_name.setText(record.getString("decoName"));
               deco_txt_address.setText(record.getString("decoAddress"));
               deco_txt_email.setText(record.getString("decoEmail"));
               deco_txt_TP.setText(record.getString("decoTP"));
               }
            }catch (ClassNotFoundException | SQLException ex) {
               Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    //user defined methods
     private boolean isTextFiledNull(JTextField t){
        return t.getText().equals("") || t.getText() == null;
    }
    
    private boolean nullValidate(){
        if(isTextFiledNull(deco_txt_name))
            return false;
        else if(isTextFiledNull(deco_txt_TP))
            return false;
        else if(deco_txt_address.getText().equals("") || deco_txt_address.getText() == null)
            return false;
        else return !isTextFiledNull(deco_txt_cost);
    }
    
     private boolean isValidMoblieNo(JTextField t){
        return t.getText().length()==10;
    }
    private void fillDecoTable(){
        
        DefaultTableModel table = (DefaultTableModel) deco_table.getModel();
        table.setRowCount(0);
        
        //setting column width
        TableColumnModel columnModel = deco_table.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(150);
        
        //load data to table from database
        try {
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM decodetails" );
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("decoID"));
                rc.add(record.getString("decoName"));
                table.addRow(rc);
            }
        } catch (ClassNotFoundException | SQLException ex) {
           Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }
    
     private void clear(){
        deco_table.clearSelection();
        deco_txt_name.setText("");
        deco_txt_address.setText("");
        deco_txt_email.setText("");
        deco_txt_TP.setText("");
        deco_txt_cost.setText("");
        deco_txt_spclNote.setText("");
        deco_chk_ballonns.setSelected(false);
        deco_chk_candles.setSelected(false);
        deco_chk_flowers.setSelected(false);
        deco_chk_lights.setSelected(false);
        deco_chk_ornemant.setSelected(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deco_btn_addNew;
    private javax.swing.JButton deco_btn_dlt;
    private javax.swing.JButton deco_btn_save;
    private javax.swing.JCheckBox deco_chk_ballonns;
    private javax.swing.JCheckBox deco_chk_candles;
    private javax.swing.JCheckBox deco_chk_flowers;
    private javax.swing.JCheckBox deco_chk_lights;
    private javax.swing.JCheckBox deco_chk_ornemant;
    private javax.swing.JCheckBox deco_chk_props;
    private javax.swing.JTable deco_table;
    private javax.swing.JTextField deco_txt_TP;
    private javax.swing.JTextArea deco_txt_address;
    private javax.swing.JTextField deco_txt_cost;
    private javax.swing.JTextField deco_txt_email;
    private javax.swing.JTextField deco_txt_name;
    private javax.swing.JTextArea deco_txt_spclNote;
    private javax.swing.JTextField deco_txt_theme;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
