/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event_UI;

import database.dbConnection2;
import java.awt.HeadlessException;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Ashen
 */

public class TimeLine extends javax.swing.JPanel {

    /**
     * Creates new form agenda
     */
    public static int tLineID;
    private static double sTime;
    private static boolean insertNew;
    private static boolean insertTLDetails;
    private boolean alreadyExecuted=false;
    
    public TimeLine() {
        initComponents();
        new_tlID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        time_txt_task = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        time_txt_spclNote = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        time_txt_stratTime = new javax.swing.JSpinner();
        time_txt_endTime = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        timeTable = new javax.swing.JTable();
        ar_btn_remove = new javax.swing.JButton();
        time_btn_add = new javax.swing.JButton();
        ar_btn_addNew = new javax.swing.JButton();
        time_txt_name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time Line", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 24))); // NOI18N
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(700, 550));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Task", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Task : ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("End Time :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Start Time : ");

        time_txt_spclNote.setColumns(10);
        time_txt_spclNote.setLineWrap(true);
        time_txt_spclNote.setRows(3);
        jScrollPane2.setViewportView(time_txt_spclNote);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Special Note :");

        time_txt_stratTime.setModel(new javax.swing.SpinnerNumberModel(0.5d, 0.5d, 24.0d, 0.5d));

        time_txt_endTime.setModel(new javax.swing.SpinnerNumberModel(0.5d, 0.5d, 24.0d, 0.5d));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(time_txt_task)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(time_txt_endTime, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(time_txt_stratTime))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(time_txt_task, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(time_txt_stratTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(time_txt_endTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time Line", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel1.setOpaque(false);

        timeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Start Time", "End Time", "Task"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        timeTable.setOpaque(false);
        timeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(timeTable);

        ar_btn_remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/forbidden.png"))); // NOI18N
        ar_btn_remove.setToolTipText("Remove");
        ar_btn_remove.setBorderPainted(false);
        ar_btn_remove.setContentAreaFilled(false);
        ar_btn_remove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ar_btn_remove.setFocusPainted(false);
        ar_btn_remove.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/forbidden.png"))); // NOI18N
        ar_btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ar_btn_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(157, Short.MAX_VALUE)
                .addComponent(ar_btn_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ar_btn_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        time_btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/navigate_right2.png"))); // NOI18N
        time_btn_add.setToolTipText("Add");
        time_btn_add.setBorderPainted(false);
        time_btn_add.setContentAreaFilled(false);
        time_btn_add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        time_btn_add.setFocusPainted(false);
        time_btn_add.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/navigate_right2.png"))); // NOI18N
        time_btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time_btn_addActionPerformed(evt);
            }
        });

        ar_btn_addNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        ar_btn_addNew.setToolTipText("Add New");
        ar_btn_addNew.setBorderPainted(false);
        ar_btn_addNew.setContentAreaFilled(false);
        ar_btn_addNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ar_btn_addNew.setFocusPainted(false);
        ar_btn_addNew.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/add.png"))); // NOI18N
        ar_btn_addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ar_btn_addNewActionPerformed(evt);
            }
        });

        time_txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time_txt_nameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Time Line Name :");

        jButton1.setText("View Time Line");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(30, 30, 30)
                                .addComponent(time_txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(time_btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ar_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(94, 94, 94))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(time_txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ar_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(time_btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ar_btn_addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ar_btn_addNewActionPerformed
        clear();
        time_txt_name.setText("");
        new_tlID();
    }//GEN-LAST:event_ar_btn_addNewActionPerformed

    private void timeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeTableMouseClicked
        sTime=Double.parseDouble(timeTable.getValueAt(timeTable.getSelectedRow(), 0).toString());
        fillTextFields(sTime);
        insertNew=false;
        insertTLDetails=false;
    }//GEN-LAST:event_timeTableMouseClicked
    
       private void fillTextFields(double t_sTime){
        sTime=t_sTime;
              try{
                Statement con = dbConnection2.db().createStatement();
                ResultSet record =  con.executeQuery("SELECT * FROM eventtimeline WHERE startTime='"+sTime+"' AND tLineID='"+tLineID+"'" );
                   while(record.next()){
                        time_txt_task.setText(record.getString("task"));
                        time_txt_stratTime.setValue(Double.parseDouble(record.getString("startTime")));
                        time_txt_endTime.setValue(Double.parseDouble(record.getString("endTime")));
                        time_txt_spclNote.setText(record.getString("SpclNote"));
                    }
            }catch (ClassNotFoundException | SQLException ex) {
                  System.out.println(ex);
        }
    }
    
    private void time_btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time_btn_addActionPerformed
        update_eventTimeLineTable();
           if(!alreadyExecuted){
            event_mainWindow.updateProgressBar(10);
            alreadyExecuted=true;
        }
           
        
//         int rowSelected = timeTable.getSelectedRow();         //do not fill arTable again while ar table row selected
//            if(rowSelected == -1)
        filltimTable();
        clear();  
    }//GEN-LAST:event_time_btn_addActionPerformed

    private void time_txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time_txt_nameActionPerformed
        
       
    }//GEN-LAST:event_time_txt_nameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        try {
//            Connection con = dbConnection2.db();
//            
//            JasperDesign jd = JRXmlLoader.load("./reports/timeLine.jrxml");
//            String sql ="SELECT * FROM eventtimeline eventID='"+eventDetails.eventID+"' AND tLineID='"+tLineID+"' "; 
//            
//            JRDesignQuery newQuery = new JRDesignQuery();
//            newQuery.setText(sql);
//            jd.setQuery(newQuery);
//            
//            JasperReport jr = JasperCompileManager.compileReport(jd);
//            JasperPrint jp = JasperFillManager.fillReport("./reports/timeLine.jasper", null , con);
//            JasperViewer.viewReport(jp);
//        } catch (ClassNotFoundException | JRException e) {
//            System.out.println(e);
//        }
        int par = eventDetails.eventID;
        HashMap param = new HashMap();
        param.put("evID",par);
        ViewReport vr = new ViewReport("./reports/timeLine2.jasper",param);
        vr.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ar_btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ar_btn_removeActionPerformed
        
    }//GEN-LAST:event_ar_btn_removeActionPerformed
    
    public void updateTimeLineName(){
        try {
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT eventName FROM eventdetails WHERE eventID='"+eventDetails.eventID+"' " );
                while(record.next()){   
                    time_txt_name.setText(record.getString("eventName"));
                }
        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex);
        }
    }
    
    private void filltimTable(){

        DefaultTableModel table = (DefaultTableModel) timeTable.getModel();
       // table.setRowCount(0);
        
        //setting column width
        TableColumnModel columnModel = timeTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(50);
        columnModel.getColumn(2).setPreferredWidth(150);
        try {
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM eventtimeline WHERE tLineID='"+tLineID+"' AND eventID='"+eventDetails.eventID+"' " );
                while(record.next()){   
                    Vector rc = new Vector();
                    rc.add(record.getString("startTime"));
                    rc.add(record.getString("endTime"));
                    rc.add(record.getString("task"));
                    table.addRow(rc);
                }
        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex);
        }
    }  
    
    private void update_eventTimeLineTable(){
        
         try{
            Statement con = dbConnection2.db().createStatement();  
                
            if(insertNew){
                    
                    con.executeUpdate("INSERT INTO timelinedetails "
                                      +"VALUES('"+tLineID+"' , '"+time_txt_name.getText()+"') ");
                    
                    con.executeUpdate("INSERT INTO eventtimeline VALUES('"+eventDetails.eventID+"' , '"+tLineID+"', '"+time_txt_task.getText()+"' , '"+String.valueOf(time_txt_stratTime.getValue())+"' ,"
                                         +" '"+String.valueOf(time_txt_endTime.getValue())+"' , '"+time_txt_spclNote.getText()+"' ) ");
                    insertNew=false;
                    
                }else{
                    
                    con.executeUpdate("UPDATE timelinedetails "
                                     +"SET tLineName='"+time_txt_name.getText()+"' "
                                     +"WHERE tLineID='"+tLineID+"' ");
                    
                  //insert additional details
                    if(insertTLDetails){
                        con.executeUpdate("INSERT INTO eventtimeline VALUES('"+eventDetails.eventID+"' , '"+tLineID+"', '"+time_txt_task.getText()+"' , '"+String.valueOf(time_txt_stratTime.getValue())+"' ,"
                                         +" '"+String.valueOf(time_txt_endTime.getValue())+"' , '"+time_txt_spclNote.getText()+"' ) ");
                        //insertTLDetails = false;
                    //update additional details    
                    }else{                                                 
                        con.executeUpdate("UPDATE timeline SET task= '"+time_txt_task.getText()+"' , startTime='"+String.valueOf(time_txt_stratTime.getValue())+"' , endTime='"+String.valueOf(time_txt_endTime.getValue())+"' , "
                                         +" SpclNote='"+time_txt_spclNote.getText()+"' WHERE tLineID='"+tLineID+"' AND eventID='"+eventDetails.eventID+"' AND startTime='"+String.valueOf(time_txt_stratTime.getValue())+"' ");
                    }
                }
            }catch(ClassNotFoundException | SQLException | HeadlessException e){
                        System.out.println(e);
            }  
    }    
    
    
    
    private void clear(){
        time_txt_task.setText("");
        time_txt_spclNote.setText("");
        timeTable.clearSelection();
    } 
    
     private void new_tlID(){
        try{
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record1  = con.executeQuery("SELECT MAX(tLineID)+1 FROM timelinedetails");             //get next venue ID
                while(record1.next()){                                                                              // if there is not already inserted venue
                    if(record1.getString(1) == null)                                                                // venue id set to 1  
                        tLineID = 1;
                    else
                        tLineID = Integer.parseInt(record1.getString("MAX(tLineID)+1"));                            // else set venue id to next number
                }
        }catch(ClassNotFoundException | SQLException | NumberFormatException e){
                System.out.println(e);
        }
        insertNew=true;
        insertTLDetails=true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ar_btn_addNew;
    private javax.swing.JButton ar_btn_remove;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable timeTable;
    private javax.swing.JButton time_btn_add;
    private javax.swing.JSpinner time_txt_endTime;
    javax.swing.JTextField time_txt_name;
    private javax.swing.JTextArea time_txt_spclNote;
    private javax.swing.JSpinner time_txt_stratTime;
    private static javax.swing.JTextField time_txt_task;
    // End of variables declaration//GEN-END:variables
}
