/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event_UI;

import database.dbConnection2;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Devi
 */
public class caterDetails extends javax.swing.JPanel {

  
    
    public static int caterID;
    boolean alreadyExecuted=false;
    private static boolean insertAddtional;
    private static boolean insertNew ;
    
    public caterDetails() {
        initComponents();
        fillCaterTable();
        newCaterID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cater_btn_save = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cater_txt_srch = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        cater_Table = new javax.swing.JTable();
        cater_btn_addNew = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cater_txt_name = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cater_txt_adrress = new javax.swing.JTextArea();
        cater_txt_email = new javax.swing.JTextField();
        cater_txt_TP = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        cater_txt_avgPrcie = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cater_combo_typeMeal = new javax.swing.JComboBox();
        cater_chk_eT = new javax.swing.JCheckBox();
        cater_chk_breakfast = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        cater_chk_lnch = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        cater_txt_splcNte = new javax.swing.JTextArea();
        cater_chk_Dnnr = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        cater_chk_cT = new javax.swing.JCheckBox();
        cater_btn_Delete = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cater Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 24))); // NOI18N
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(700, 571));

        cater_btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/check.png"))); // NOI18N
        cater_btn_save.setBorderPainted(false);
        cater_btn_save.setContentAreaFilled(false);
        cater_btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cater_btn_save.setFocusPainted(false);
        cater_btn_save.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/check.png"))); // NOI18N
        cater_btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_btn_saveActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel1.setOpaque(false);

        cater_txt_srch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_txt_srch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_txt_srchActionPerformed(evt);
            }
        });
        cater_txt_srch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cater_txt_srchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cater_txt_srchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cater_txt_srchKeyTyped(evt);
            }
        });

        cater_Table.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cater_Table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cater_Table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        cater_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cater_TableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(cater_Table);

        cater_btn_addNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        cater_btn_addNew.setBorderPainted(false);
        cater_btn_addNew.setContentAreaFilled(false);
        cater_btn_addNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cater_btn_addNew.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/add.png"))); // NOI18N
        cater_btn_addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_btn_addNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cater_txt_srch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(cater_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(cater_txt_srch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(cater_btn_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Name :");

        cater_txt_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cater_txt_nameKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Address :");

        cater_txt_adrress.setColumns(10);
        cater_txt_adrress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_txt_adrress.setRows(3);
        cater_txt_adrress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cater_txt_adrressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(cater_txt_adrress);

        cater_txt_email.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cater_txt_emailKeyTyped(evt);
            }
        });

        cater_txt_TP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_txt_TP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_txt_TPActionPerformed(evt);
            }
        });
        cater_txt_TP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cater_txt_TPKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Tel/Mobile Num :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("E-mail  :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cater_txt_email)
                    .addComponent(cater_txt_TP)
                    .addComponent(cater_txt_name))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cater_txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(27, 27, 27)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cater_txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cater_txt_TP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Additional Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Meal :");

        cater_txt_avgPrcie.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_txt_avgPrcie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_txt_avgPrcieActionPerformed(evt);
            }
        });
        cater_txt_avgPrcie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cater_txt_avgPrcieKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Average Price :");

        cater_combo_typeMeal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_combo_typeMeal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose One", "Buffet", "Sit-Down/Served", "Family Style", "Other" }));
        cater_combo_typeMeal.setOpaque(false);

        cater_chk_eT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_chk_eT.setText("Evening Tea");
        cater_chk_eT.setOpaque(false);
        cater_chk_eT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_chk_eTActionPerformed(evt);
            }
        });

        cater_chk_breakfast.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_chk_breakfast.setText("Breakfast");
        cater_chk_breakfast.setOpaque(false);
        cater_chk_breakfast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_chk_breakfastActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Special Note :");

        cater_chk_lnch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_chk_lnch.setText("Lunch");
        cater_chk_lnch.setOpaque(false);
        cater_chk_lnch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_chk_lnchActionPerformed(evt);
            }
        });

        cater_txt_splcNte.setColumns(10);
        cater_txt_splcNte.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_txt_splcNte.setRows(3);
        cater_txt_splcNte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cater_txt_splcNteKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(cater_txt_splcNte);

        cater_chk_Dnnr.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_chk_Dnnr.setText("Dinner");
        cater_chk_Dnnr.setOpaque(false);
        cater_chk_Dnnr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_chk_DnnrActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Type of Meal :");

        cater_chk_cT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cater_chk_cT.setText("Cocktail");
        cater_chk_cT.setOpaque(false);
        cater_chk_cT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_chk_cTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16))
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cater_combo_typeMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cater_chk_Dnnr)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cater_chk_breakfast)
                            .addComponent(cater_chk_lnch))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cater_chk_eT)
                            .addComponent(cater_chk_cT)))
                    .addComponent(cater_txt_avgPrcie, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel10)
                    .addContainerGap(227, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cater_combo_typeMeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cater_chk_breakfast)
                    .addComponent(cater_chk_eT))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cater_chk_cT)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cater_chk_lnch)
                        .addComponent(jLabel16)))
                .addGap(3, 3, 3)
                .addComponent(cater_chk_Dnnr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cater_txt_avgPrcie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel13)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(jLabel10)
                    .addContainerGap(191, Short.MAX_VALUE)))
        );

        cater_btn_Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/forbidden.png"))); // NOI18N
        cater_btn_Delete.setBorderPainted(false);
        cater_btn_Delete.setContentAreaFilled(false);
        cater_btn_Delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cater_btn_Delete.setFocusPainted(false);
        cater_btn_Delete.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shadow/forbidden.png"))); // NOI18N
        cater_btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cater_btn_DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cater_btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cater_btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cater_btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cater_btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cater_txt_TPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_txt_TPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cater_txt_TPActionPerformed

    private void cater_txt_srchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_txt_srchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cater_txt_srchActionPerformed

    private void cater_txt_avgPrcieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_txt_avgPrcieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cater_txt_avgPrcieActionPerformed

    private void cater_btn_addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_btn_addNewActionPerformed
       clear();
       newCaterID();
    }//GEN-LAST:event_cater_btn_addNewActionPerformed
    
    private void newCaterID(){
             try{
                Statement con = dbConnection2.db().createStatement();
                java.sql.ResultSet record1  = con.executeQuery("SELECT MAX(caterID)+1 FROM caterdetails");    //get next venue ID
                    while(record1.next()){                                                                    // if there is not already inserted venue
                        if(record1.getString(1) == null)                                                      // venue id set to 1  
                            caterID = 1;
                        else
                            caterID = Integer.parseInt(record1.getString("MAX(caterID)+1"));                   // else set venue id to next number
                    }
            }catch(ClassNotFoundException | SQLException | NumberFormatException e){
                System.out.println(e);
            }    
        insertNew=true;
        insertAddtional=true;
    }
    
    private void cater_btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_btn_saveActionPerformed
        
        int breakfast = cater_chk_breakfast.isSelected() ? 1:0;
        int lunch = cater_chk_lnch.isSelected() ? 1:0;
        int dinner = cater_chk_Dnnr.isSelected() ? 1:0;
        int eveningTea = cater_chk_eT.isSelected() ? 1:0;
        int cockTail = cater_chk_cT.isSelected() ? 1:0;
        
        if(!nullValidate()){
            JOptionPane.showMessageDialog(null,"Field Cannot be Empty...!","Error",1);
        }else if(!isValidMoblieNo(cater_txt_TP)){
            JOptionPane.showMessageDialog(null,"Moblie Number is Invalid...!","Error",1);
            cater_txt_TP.grabFocus();
        }else{
            try{
               Statement con = dbConnection2.db().createStatement();  
                   if(insertNew){

                       con.executeUpdate("INSERT INTO caterdetails "
                                         +"VALUES('"+caterID+"' , '"+cater_txt_name.getText()+"' , '"+cater_txt_adrress.getText()+"' , '"+cater_txt_email.getText()+"' , '"+cater_txt_TP.getText()+"') ");

                        //insert additional details
                       if(insertAddtional){
                           con.executeUpdate("INSERT INTO eventcater VALUES('"+eventDetails.eventID+"', '"+caterID+"' , '"+cater_combo_typeMeal.getSelectedItem()+"' ,"
                                            +"'"+breakfast+"' , '"+lunch+"' , '"+dinner+"' , '"+eveningTea+"' , '"+cockTail+"' , '"+cater_txt_avgPrcie.getText()+"' , '"+cater_txt_splcNte.getText()+"') ");
                           insertAddtional = false;

                       //update additional details    
                       }else{                                                 
                           con.executeUpdate("UPDATE eventcater SET venueID= '"+caterID+"' , breakfast= '"+breakfast+"' , lunch='"+lunch+"' , dinner='"+dinner+"' , "
                                            +"evngTea='"+eveningTea+"' , cocktail='"+cockTail+"' , avgPrice='"+cater_txt_avgPrcie.getText()+"' , spclNote='"+cater_txt_splcNte.getText()+"' WHERE eventID='"+eventDetails.eventID+"' ");
                       }

                      
                         if(!alreadyExecuted){
                                event_mainWindow.updateProgressBar(15);
                                alreadyExecuted=true;
                               }
                         
                    insertNew = false;     
                       fillCaterTable();

                   }else{

                       con.executeUpdate("UPDATE caterdetails "
                                        +"SET caterName='"+cater_txt_name.getText()+"' , caterAddress='"+cater_txt_adrress.getText()+"' , caterEmail='"+cater_txt_email.getText()+"' , caterTP='"+cater_txt_TP.getText()+"' "
                                        +"WHERE caterID='"+caterID+"' ");

                        //insert additional details
                       if(insertAddtional){
                           con.executeUpdate("INSERT INTO eventcater VALUES('"+eventDetails.eventID+"', '"+cater_Table.getValueAt(cater_Table.getSelectedRow(), 0)+"' , '"+cater_combo_typeMeal.getSelectedItem()+"' ,"
                                            +"'"+breakfast+"' , '"+lunch+"' , '"+dinner+"' , '"+eveningTea+"' , '"+cockTail+"' , '"+cater_txt_avgPrcie.getText()+"' , '"+cater_txt_splcNte.getText()+"') ");
                           insertAddtional = false;

                       //update additional details    
                       }else{                                                 
                           con.executeUpdate("UPDATE eventcater SET caterID= '"+caterID+"' , breakfast= '"+breakfast+"' , lunch='"+lunch+"' , dinner='"+dinner+"' , "
                                            +"evngTea='"+eveningTea+"' , cocktail='"+cockTail+"' , avgPrice='"+cater_txt_avgPrcie.getText()+"' , spclNote='"+cater_txt_splcNte.getText()+"' WHERE eventID='"+eventDetails.eventID+"' ");
                       }
                    
                       if(!alreadyExecuted){
                                event_mainWindow.updateProgressBar(15);
                                alreadyExecuted=true;
                               }
                       fillCaterTable();

                   }
               }catch(ClassNotFoundException | SQLException | HeadlessException e){
                           System.out.println(e);
                           JOptionPane.showMessageDialog(null,"Check Again...!","Error",1);
               }
        }
    }//GEN-LAST:event_cater_btn_saveActionPerformed

    private void cater_chk_breakfastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_chk_breakfastActionPerformed
        
    }//GEN-LAST:event_cater_chk_breakfastActionPerformed

    private void cater_chk_lnchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_chk_lnchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cater_chk_lnchActionPerformed

    private void cater_chk_eTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_chk_eTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cater_chk_eTActionPerformed

    private void cater_chk_DnnrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_chk_DnnrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cater_chk_DnnrActionPerformed

    private void cater_chk_cTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_chk_cTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cater_chk_cTActionPerformed

    private void cater_btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cater_btn_DeleteActionPerformed

        if(nullValidate()){
            if(JOptionPane.showConfirmDialog(null,"Are You sure want to Remove this...?","Remove",JOptionPane.YES_NO_OPTION)==0){
                try {
                    Statement con = dbConnection2.db().createStatement();
                    con.executeUpdate("DELETE FROM eventcater WHERE eventID='"+eventDetails.eventID+"'");
                    JOptionPane.showMessageDialog(null, "Successfully Removed...!");
                    clear();
                    newCaterID();
                    event_mainWindow.updateProgressBar(-15);
                    alreadyExecuted=false;
                } catch (ClassNotFoundException | SQLException | HeadlessException e) {
                    System.out.println(e);
                }
             }
            
        }else{
            JOptionPane.showMessageDialog(null,"Field Cannot be Empty...!","Error",1);
        }
    }//GEN-LAST:event_cater_btn_DeleteActionPerformed

    private void cater_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cater_TableMouseClicked
        caterID = Integer.parseInt(String.valueOf(cater_Table.getValueAt(cater_Table.getSelectedRow(), 0)));
        fillTextFileds(caterID);
        insertNew = false;
    }//GEN-LAST:event_cater_TableMouseClicked
    
    private void fillTextFileds(int t_caterID){
        try{
            Statement con = dbConnection2.db().createStatement();
            ResultSet record =  con.executeQuery("SELECT * FROM caterdetails WHERE caterID='"+t_caterID+"'" );
               while(record.next()){
               cater_txt_name.setText(record.getString("caterName"));
               cater_txt_adrress.setText(record.getString("caterAddress"));
               cater_txt_email.setText(record.getString("caterEmail"));
               cater_txt_TP.setText(record.getString("caterTP"));
               }
            }catch (ClassNotFoundException | SQLException ex) {
               Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    
    private void cater_txt_srchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_srchKeyPressed
       fillCaterTable();
    }//GEN-LAST:event_cater_txt_srchKeyPressed

    private void cater_txt_srchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_srchKeyReleased
        try {
                DefaultTableModel table = (DefaultTableModel) cater_Table.getModel();
                table.setRowCount(0);
                if (!(cater_txt_srch.getText().equals(""))) {
                    Statement con = dbConnection2.db().createStatement();
                    ResultSet rs1 = con.executeQuery("SELECT * FROM caterdetails WHERE caterName LIKE '%" + cater_txt_srch.getText() + "%'");
                    while (rs1.next()) {
                        Vector v1 = new Vector();
                        v1.add(rs1.getString("caterID"));
                        v1.add(rs1.getString("caterName"));
                        table.addRow(v1);
                    }
                } else {
                    fillCaterTable();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_cater_txt_srchKeyReleased

    private void cater_txt_srchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_srchKeyTyped
        // TODO add your handling code here:
            if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_cater_txt_srchKeyTyped

    private void cater_txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_nameKeyTyped
        // TODO add your handling code here:
            if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_cater_txt_nameKeyTyped

    private void cater_txt_adrressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_adrressKeyTyped
        // TODO add your handling code here:
            if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_cater_txt_adrressKeyTyped

    private void cater_txt_emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_emailKeyTyped
        // TODO add your handling code here:
            if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_cater_txt_emailKeyTyped

    private void cater_txt_TPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_TPKeyTyped
        // TODO add your handling code here:
            if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39 || Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_cater_txt_TPKeyTyped

    private void cater_txt_avgPrcieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_avgPrcieKeyTyped
        // TODO add your handling code here:
         if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39 || Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_cater_txt_avgPrcieKeyTyped

    private void cater_txt_splcNteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cater_txt_splcNteKeyTyped
        // TODO add your handling code here:
            if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39) {
            evt.consume();
        }
    }//GEN-LAST:event_cater_txt_splcNteKeyTyped

    private void fillCaterTable(){
        
        DefaultTableModel table = (DefaultTableModel) cater_Table.getModel();
        table.setRowCount(0);
        
        //setting column width
        TableColumnModel columnModel = cater_Table.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(150);
        
        //load data to table from database
        try {
            Statement con = dbConnection2.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM caterdetails" );
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("caterID"));
                rc.add(record.getString("caterName"));
                table.addRow(rc);
            }
        } catch (ClassNotFoundException | SQLException ex) {
           Logger.getLogger(event_mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }
    
    //user defined methods
     private boolean isTextFiledNull(JTextField t){
        return t.getText().equals("") || t.getText() == null;
    }
    
    private boolean nullValidate(){
        if(isTextFiledNull(cater_txt_name))
            return false;
        else if(isTextFiledNull(cater_txt_TP))
            return false;
        else if(cater_txt_adrress.getText().equals("") || cater_txt_adrress.getText() == null)
            return false;
        else if(isTextFiledNull(cater_txt_avgPrcie))
            return false;
        else return cater_combo_typeMeal.getSelectedItem() != "Choose One";
    }
    
     private boolean isValidMoblieNo(JTextField t){
        return t.getText().length()==10;
    }
    
    
    private void clear(){
        cater_Table.clearSelection();
        cater_txt_name.setText("");
        cater_txt_adrress.setText("");
        cater_txt_email.setText("");
        cater_txt_TP.setText("");
        cater_txt_avgPrcie.setText("");
        cater_txt_splcNte.setText("");
        cater_chk_breakfast.setSelected(false);
        cater_chk_lnch.setSelected(false);
        cater_chk_Dnnr.setSelected(false);
        cater_chk_eT.setSelected(false);
        cater_chk_cT.setSelected(false);
        cater_combo_typeMeal.setSelectedItem("Choose One");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cater_Table;
    private javax.swing.JButton cater_btn_Delete;
    private javax.swing.JButton cater_btn_addNew;
    private javax.swing.JButton cater_btn_save;
    private javax.swing.JCheckBox cater_chk_Dnnr;
    private javax.swing.JCheckBox cater_chk_breakfast;
    private javax.swing.JCheckBox cater_chk_cT;
    private javax.swing.JCheckBox cater_chk_eT;
    private javax.swing.JCheckBox cater_chk_lnch;
    private javax.swing.JComboBox cater_combo_typeMeal;
    private javax.swing.JTextField cater_txt_TP;
    private javax.swing.JTextArea cater_txt_adrress;
    private javax.swing.JTextField cater_txt_avgPrcie;
    private javax.swing.JTextField cater_txt_email;
    private javax.swing.JTextField cater_txt_name;
    private javax.swing.JTextArea cater_txt_splcNte;
    private javax.swing.JTextField cater_txt_srch;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
